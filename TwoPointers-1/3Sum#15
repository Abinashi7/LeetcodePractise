class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        
        List<List<Integer>> result = new ArrayList<>();
        // int sum =0;
        Arrays.sort(nums);
        int size = nums.length;
        for(int i=0; i < nums.length-2; i++){
            
            int j = i+1;
            int k = nums.length-1;
            while(j < k){
                int sum = nums[i] + nums[j] + nums[k];
            
            if( sum == 0){
                result.add(Arrays.asList(nums[i],nums[j],nums[k]));
                
//                 check for the duplicates and skipping them
                int leftNum = nums[j];
                while( j < size && leftNum == nums[j] ){
                    j++;
                }
                
                int rightNum = nums[k];
                while( k > j && rightNum == nums[k]){
                    k--;
                }
            }else if( sum > 0){
                k--;
            }else if( sum < 0){
                j++;
            }
        }

//         getting rid of duplicates when it comes to current element or i
            while( i+1 < size && nums[i] == nums[i+1]){
                i++;
            }
    }
        
        return result;
}
}
