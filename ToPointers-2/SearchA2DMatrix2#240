// M+n runtime solution
// We can take advantage of sorted rows and cols and move closer to target.
// We can start from upper right or bottom left position bc these are the only 2 positions that have a lower and higher number adjacent to them
// This will allow me to take one decision at a time
// for eg: if a particular element at a given index is > than target then I can decrease my col and look for smaller elements
// and if a particular element at a given index is < than target then I can increase my row and look for greater elements

class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        
        if(matrix == null || matrix.length == 0)return false;
        
        int r=0,  c= matrix[0].length-1;
        
        
        while( r < matrix.length && c >= 0){
            
            if(matrix[r][c] == target) return true;
            else if(matrix[r][c] > target){
                c--;
            }else{
                r++;
            }
        }
        
        return false;
        
    }
}
