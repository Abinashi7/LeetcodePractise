class Solution {
    public ListNode reverseList(ListNode head) {
        
        if(head == null || head.next == null) return head;
        ListNode prev = null;
        ListNode cur = head;
        ListNode fast = head.next;
        
        
        while(fast!= null){
            
            cur.next = prev;
            prev = cur;
            cur = fast;
            fast = fast.next;   
        }
        cur.next = prev;
        return cur;
        
    }
}


// recursive solution
class Solution {
    public ListNode reverseList(ListNode head) {
        //base
        if(head == null || head.next == null) return head;
        
        //recurse
        ListNode root = reverseList(head.next);
        
        head.next.next = head; // reversal step
        head.next = null;
        
        return root;
        
    }
}
