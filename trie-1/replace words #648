class Solution {
    
    class TrieNode {
        String word;
        TrieNode[] children;
        
        TrieNode(){
            children = new TrieNode[26];
        }
    }
    
    // to inster the dictionary words in the trieNode
    TrieNode root = new TrieNode();
    private void insert(String word){
        TrieNode cur = root;
        for(int i=0; i< word.length(); i++){
            char c= word.charAt(i);
            if(cur.children[c-'a'] == null){
                cur.children[c-'a'] = new TrieNode();
            }
            cur = cur.children[c-'a'];
            
        }
        cur.word = word;
        
    }
    // \\s+ will split the array when ther'e space. It will split evenly also when there's more than one space in between two words
    public String replaceWords(List<String> dictionary, String sentence) {
        
        for( String word: dictionary){
            insert(word);
        }
        String [] sentences = sentence.split("\\s+"); 
        TrieNode cur = null;
        StringBuilder result = new StringBuilder();
        for(int j =0; j<sentences.length; j++){
            String word = sentences[j];
            if(j > 0) result.append(" ");
            cur = root;
            for(int i=0; i< word.length(); i++){
                char c = word.charAt(i);
                if( cur.children[c-'a'] == null || cur.word != null ) break;
                if(cur.children[c-'a'] != null){
                    cur = cur.children[c-'a'];
                }
  
            }
            if(cur.word != null){
                    result.append(cur.word);
            }else{
                    result.append(word);
            }
        }
        return result.toString();
        
    }
}
