class Solution {
    int[][] dirs = {{1, 0}, {0,1}, {-1, 0}, {0, -1}};
    public boolean exist(char[][] board, String word) {
        
        board = board;
        for(int i=0; i< board.length; i++){
            for(int j=0; j< board[0].length; j++){
                
                if(backtrack(board,word, i, j)) return true;
            }
        }
        
        return false;
        
    }
    
    
    private boolean backtrack( char[][] board, String word, int i, int j){
        
        // base
        if( i < 0 || i >= board.length || j < 0 || j >= board[0].length || board[i][j] == '#') return false;
        // action
        
        if(word.charAt(0) == board[i][j]){
            char prev = board[i][j];
            board[i][j] = '#';
            if(word.length() == 1) return true;
            for(int [] dir: dirs){
                
                int r = dir[0] + i;
                int c = dir[1] + j;
                if(backtrack(board, word.substring(1), r, c)){
                    return true;
                }
            }
            board[i][j] = prev;
            
        }
        return false;
        
    }
    
}
